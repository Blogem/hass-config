# for wake up light
- platform: time_date
  display_options:
    - 'time'

# spotcast
- platform: spotcast

# usb temper
- platform: temper
  name: Woonkamer temperatuur

# Zigbee2mqtt -  Sensor for monitoring the bridge state
- platform: mqtt
  name: Zigbee2mqtt Bridge state
  state_topic: "zigbee2mqtt/bridge/state"
  icon: mdi:router-wireless
# Zigbee2mqtt -  Sensor for Showing the Zigbee2mqtt Version
- platform: mqtt
  name: Zigbee2mqtt Version
  state_topic: "zigbee2mqtt/bridge/config"
  value_template: "{{ value_json.version }}"
  icon: mdi:zigbee
# Zigbee2mqtt -  Sensor for Showing the Coordinator Version
- platform: mqtt
  name: Coordinator Version
  state_topic: "zigbee2mqtt/bridge/config"
  value_template: "{{ value_json.coordinator }}"
  icon: mdi:chip

# Eurotronic radiatorknop
- platform: template
  sensors:
    radiatorknop_battery:
      friendly_name: "Radiator battery"
      entity_id: climate.radiatorknop
      unit_of_measurement: '%'
      device_class: 'battery'
      value_template: "{{ state_attr('climate.radiatorknop', 'battery') }}"
    radiatorknop_temperature:
      friendly_name: "Huidige temperatuur"
      entity_id: climate.radiatorknop
      unit_of_measurement: '°C'
      device_class: 'temperature'
      value_template: "{{ state_attr('climate.radiatorknop', 'current_temperature') }}"
    radiatorknop_temperature_setpoint:
      friendly_name: "Doel temperatuur"
      entity_id: climate.radiatorknop
      unit_of_measurement: '°C'
      device_class: 'temperature'
      value_template: "{{ state_attr('climate.radiatorknop', 'temperature') }}"
    radiatorknop_heatingdemand:
      friendly_name: "Warmtevraag"
      entity_id: climate.radiatorknop
      value_template: "{{ state_attr('climate.radiatorknop', 'pi_heating_demand') }}"  

# raspotify. monitoring playEvent
- platform: mqtt
  name: Raspotify playEvent
  state_topic: raspotify/playEvent