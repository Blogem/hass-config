- id: '1566066851941'
  alias: Away
  trigger:
  - entity_id: person.jochem
    from: home
    platform: state
    to: not_home
  condition: []
  action:
  - service: script.turn_on
    entity_id: script.radiator_woonkamer_off
  - service: script.scene_uit
  - service: script.spotify_op_pi_uit
  - data:
      entity_id: media_player.chromebitch
    service: media_player.turn_off
  - data:
      entity_id: switch.onkyo
    service: switch.turn_off
  - data:
      entity_id: input_boolean.onkyo_lock
    service: input_boolean.turn_off
  - service: script.spotify_op_pi_uit

- id: '1566142801325'
  alias: Home (dag)
  trigger:
  - entity_id: person.jochem
    from: not_home
    platform: state
    to: home
  condition:
  - condition: state
    state: above_horizon
    entity_id: sun.sun
  action:
  - service: timer.cancel
    data:
      entity_id: timer.voordeur
  - service: script.scene_overdag
  #- service: script.spotify2chromecast
  - service: script.spotify2pi_conditional
  - service: script.radiator_woonkamer_on

- alias: Home (avond)
  trigger:
  - entity_id: person.jochem
    from: not_home
    platform: state
    to: home
  condition:
  - condition: state
    state: below_horizon
    entity_id: sun.sun
  action:
  - service: timer.cancel
    data:
      entity_id: timer.voordeur
  - service: script.scene_avond
  #- service: script.spotify2chromecast
  - service: script.spotify2pi_conditional
  - service: script.radiator_woonkamer_on
  id: e53a8b9a452d4a5f9f8cc2fbbd948681

- id: '1566071067769'
  alias: Avond
  trigger:
  - event: sunset
    offset: -00:07:00
    platform: sun
  condition:
  - condition: state
    entity_id: person.jochem
    state: home
  action:
  - service: script.scene_avond

- alias: Webhook Call Service
  initial_state: 'on'
  trigger:
    platform: webhook
    webhook_id: !secret webhook_generic
  action:
    service_template: '{{ trigger.json.service }}'
    data_template:
      entity_id: '{{ trigger.json.entity_id }}'
  id: 0b5c58ac9553406fb82637c0285449cb

- id: '1566074829768'
  alias: Tasker Alles uit
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_uit
  condition: []
  action:
  - service: script.turn_on
    entity_id: script.radiator_woonkamer_off
  - service: script.scene_uit
  - service: script.spotify_op_pi_uit
  - data:
      entity_id: media_player.chromebitch
    service: media_player.turn_off
  - data:
      entity_id: switch.onkyo
    service: switch.turn_off
  - data:
      entity_id: input_boolean.onkyo_lock
    service: input_boolean.turn_off

- id: '1568405264320'
  alias: Tasker Keuken Werk toggle
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_keukenwerktoggle
  condition: []
  action:
  - alias: ''
    data:
      entity_id: light.keuken_werk
    service: light.toggle

- id: '1568405354120'
  alias: Tasker Woonkamer plafond toggle
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_woonkamerplafondtoggle
  condition: []
  action:
  - data:
      entity_id: switch.woonkamer_plafond
    service: switch.toggle

- id: '1568406229777'
  alias: Tasker Radio toggle
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_radiotoggle
  condition: []
  action:
  - data: {}
    service: script.concertzender

- id: 'tasker_sceneoverdag'
  alias: Tasker Scene Overdag
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_sceneoverdag
  action:
  - service: script.scene_overdag

- id: 'tasker_sceneavond'
  alias: Tasker Scene Avond
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_sceneavond
  action:
  - service: script.scene_avond

- id: 'tasker_sceneavond2'
  alias: Tasker Scene Avond2
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_sceneavond2
  action:
  - service: script.scene_avond2

- id: 'tasker_scenerelax'
  alias: Tasker Scene Relax
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_scenerelax
  action:
  - service: script.scene_relax

- id: 'tasker_scenerelax2'
  alias: Tasker Scene Relax2
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_scenerelax2
  action:
  - service: script.scene_relax2

- id: 'tasker_scenenachtlicht'
  alias: Tasker Scene Nachtlicht
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_scenenachtlicht
  action:
  - service: script.scene_nachtlicht

- id: 'tasker_nachtlicht'
  alias: Tasker Nachtlicht
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_nachtlicht
  condition:
  # alleen als er geen lampen aan staan
  - condition: template
    value_template: >
      {{ states.light | count == states.light | selectattr('state','eq','off') | list | count }}
  # alleen als ik thuis wakker word
  - condition: state
    entity_id: person.jochem
    state: home
  action:
  - service: script.scene_nachtlicht

- id: 'tasker_radiatoraan'
  alias: Tasker Radiator aan
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_radiatoraan
  action:
  - service: script.turn_on
    entity_id: script.radiator_woonkamer_on

- id: 'tasker_radiatoruit'
  alias: Tasker Radiator uit
  trigger:
  - platform: webhook
    webhook_id: !secret webhook_tasker_radiatoruit
  action:
  - service: script.turn_on
    entity_id: script.radiator_woonkamer_off

- alias: Wake-up light
  trigger:
    platform: template
    value_template: '{{ states(''sensor.time'') == (states.input_datetime.wakeup_time.attributes.timestamp
      | int | timestamp_custom(''%H:%M'', False)) }}'
  condition:
  - condition: state
    entity_id: person.jochem
    state: home
  - condition: state
    entity_id: input_boolean.wakeup_enabled
    state: 'on'
  - condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.wakeup_weekend
      state: 'on'
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: light.turn_on
    entity_id: group.wakeup_lights
    data:
      brightness: 0
  - service: light.turn_on
    entity_id: group.wakeup_lights
    data:
      transition: 1800
      brightness: 240
  - delay: 00:05:00
  - service: shell_command.move_frameworkradio
  id: 47d31d79b0e1410b8c4f5cb311dc92dd

- alias: Alarm clock
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: created
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.onkyo
  - service: media_player.volume_set
    data:
      entity_id: media_player.vlc_telnet
      volume_level: 0.01
  - delay: '00:00:01'
  - service: media_player.play_media
    data_template:
      entity_id: media_player.vlc_telnet
      media_content_id: '{{ trigger.event.data.path }}'
      media_content_type: 'music'
  - service: shell_command.touch
    data:
      file: '{{ trigger.event.data.path }}'
  - service: python_script.volume_transition
    data:
      entity_id: media_player.vlc_telnet
      transition_duration: 900
      sleep_delay: 3
      start_level: 0.1
      end_level: 0.5

- alias: Zigbee2mqtt Log Level
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.zigbee2mqtt_log_level
  action:
  - service: mqtt.publish
    data:
      payload_template: '{{ states(''input_select.zigbee2mqtt_log_level'') }}'
      topic: zigbee2mqtt/bridge/config/log_level
  id: 6b75adc07fef47a4818a22b47fed6015

- id: zigbee_join_enabled
  alias: Zigbee Join Enabled
  #hide_entity: true
  trigger:
    platform: state
    entity_id: switch.zigbee2mqtt_main_join
    to: 'on'
  action:
    service: timer.start
    entity_id: timer.zigbee_permit_join

- id: zigbee_join_disabled
  alias: Zigbee Join Disabled
  #hide_entity: true
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.zigbee_permit_join
  - platform: state
    entity_id: switch.zigbee2mqtt_main_join
    to: 'off'
  action:
  - service: timer.cancel
    data:
      entity_id: timer.zigbee_permit_join
  - service: switch.turn_off
    entity_id: switch.zigbee2mqtt_main_join

- id: Plafondlamp_aan_bij_donker_lx
  alias: Plafondlamp aan als het donker is (lx)
  trigger:
    platform: numeric_state
    entity_id: sensor.bewegingsmelder_illuminance
    below: 60
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.keuken_werk
      state: 'on'
    - condition: state
      entity_id: switch.woonkamer_plafond
      state: 'off'
      for: '00:05:00'
    - condition: or
      conditions:
      - condition: state
        entity_id: light.av_meubel
        state: 'off'
      - condition: state
        entity_id: switch.av_tafellamp
        state: 'off'
  action:
  - service: switch.turn_on
    entity_id: switch.woonkamer_plafond

- id: Plafondlamp_aan_timer
  alias: Plafondlamp aan als het donker is (trigger = timer)
  trigger:
    platform: time_pattern
    minutes: '/1'
  condition:
    condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.bewegingsmelder_illuminance
      below: 60
    - condition: state
      entity_id: light.keuken_werk
      state: 'on'
    - condition: state
      entity_id: switch.woonkamer_plafond
      state: 'off'
      for: '00:05:00'
    - condition: or
      conditions:
      - condition: state
        entity_id: light.av_meubel
        state: 'off'
      - condition: state
        entity_id: switch.av_tafellamp
        state: 'off'
  action:
  - service: switch.turn_on
    entity_id: switch.woonkamer_plafond

#- id: Plafondlamp_bij_donker_occupancy
#  alias: Plafondlamp aan als het donker is (occ)
#  trigger:
#    platform: state
#    entity_id: binary_sensor.bewegingsmelder_occupancy
#    from: 'off'
#    to: 'on'
#  condition:
#    condition: and
#    conditions:
#    - condition: state
#      entity_id: light.keuken_werk
#      state: 'on'
#    - condition: state
#      entity_id: switch.woonkamer_plafond
#      state: 'off'
#      for: '00:15:00'
#    - condition: numeric_state
#      entity_id: sensor.bewegingsmelder_illuminance
#      below: 60
#    - condition: or
#      conditions:
#      - condition: state
#        entity_id: light.av_meubel
#        state: 'off'
#      - condition: state
#        entity_id: switch.av_tafellamp
#        state: 'off'
#  action:
#  - service: switch.turn_on
#    entity_id: switch.woonkamer_plafond
#
- id: Plafondlamp_aan_bij_donker_keukenwerk
  alias: Plafondlamp aan als keukenwerk aan gaat en het donker is
  trigger:
    platform: state
    entity_id: light.keuken_werk
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.bewegingsmelder_illuminance
      below: 60
    - condition: or
      conditions:
      - condition: state
        entity_id: light.av_meubel
        state: 'off'
      - condition: state
        entity_id: switch.av_tafellamp
        state: 'off'
  action:
  - service: switch.turn_on
    entity_id: switch.woonkamer_plafond

- id: Plafondlamp_uit_bij_licht_lx
  alias: Plafondlamp uit als het te licht is
  trigger:
    platform: numeric_state
    entity_id: sensor.bewegingsmelder_illuminance
    above: 60
  condition:
  - condition: state
    entity_id: switch.woonkamer_plafond
    state: 'on'
    for: '00:15:00'
  action:
  - service: switch.turn_off
    entity_id: switch.woonkamer_plafond

- id: Plafondlamp_uit_timer
  alias: Plafondlamp uit als het te licht is (trigger = timer)
  trigger:
    platform: time_pattern
    minutes: '/1'
  condition:
  - condition: state
    entity_id: switch.woonkamer_plafond
    state: 'on'
    for: '00:15:00'
  - condition: numeric_state
    entity_id: sensor.bewegingsmelder_illuminance
    above: 60
  action:
  - service: switch.turn_off
    entity_id: switch.woonkamer_plafond

- id: onkyo_start_playing
  alias: Zet onkyo aan als Chromebitch afspeelt
  trigger:
    platform: state
    entity_id: media_player.chromebitch
    to: 'playing'
  condition:
  - condition: state
    state: 'off'
    entity_id: switch.onkyo
  action:
  - service: switch.turn_on
    entity_id: switch.onkyo

- id: pause_raspotify_for_chromebitch
  alias: Zet raspotify op pauze als Chromebitch afspeelt
  trigger:
    platform: state
    entity_id: media_player.chromebitch
    to: 'playing'
  condition:
  - condition: template
    value_template: "{{ states('sensor.raspotify_playevent') != 'paused' }}"
  action:
  - service: media_player.media_pause
    entity_id: media_player.spotify_jochem_van_leeuwen

- id: pause_chromebitch_for_raspotify
  alias: Zet Chromebitch op pauze als raspotify afspeelt
  trigger:
    platform: state
    entity_id: sensor.raspotify_playevent
    to: 'playing'
  condition:
  - condition: state
    entity_id: 'media_player.chromebitch'
    state: 'playing'
  action:
  - service: media_player.media_pause
    entity_id: media_player.chromebitch

# - id: onkyo_start_playing_optic
#   alias: Zet onkyo aan als Spotify op pi afspeelt
#   trigger:
#     platform: state
#     entity_id: media_player.spotify_jochem_van_leeuwen
#     to: 'playing'
#   condition:
#     condition: and
#     conditions:
#     - condition: state
#       state: 'off'
#       entity_id: switch.onkyo
#     - condition: template
#       value_template: "{{ is_state_attr('media_player.spotify_jochem_van_leeuwen', 'source', 'pi') }}"
#   action:
#   - service: switch.turn_on
#     entity_id: switch.onkyo

# - id: onkyo_start_playing_optic2
#   alias: Zet onkyo aan als Spotify op pi afspeelt (trigger = source)
#   trigger:
#     platform: template
#     value_template: "{% if is_state_attr('media_player.spotify_jochem_van_leeuwen', 'source', 'pi') %}true{% endif %}"
#   condition:
#     condition: and
#     conditions:
#     - condition: state
#       state: 'off'
#       entity_id: switch.onkyo
#     - condition: template
#       value_template: "{{ is_state_attr('media_player.spotify_jochem_van_leeuwen', 'source', 'pi') }}"
#   action:
#   - service: switch.turn_on
#     entity_id: switch.onkyo

- id: kill_vlc_for_raspotify
  alias: Kill VLC als raspotify gaat spelen
  trigger:
    platform: state
    entity_id: sensor.raspotify_playevent
    to: 'playing'
  condition:
  - condition: template
    value_template: "{{ states('media_player.vlc_telnet') != 'idle' }}"
  action:
  - service: media_player.media_stop
    entity_id: media_player.vlc_telnet

- id: onkyo_start_playing_raspotify
  alias: Zet onkyo aan als Spotify op pi afspeelt
  trigger:
    - platform: state
      entity_id: 'sensor.raspotify_playevent'
      to: 'start'
    - platform: state
      entity_id: 'sensor.raspotify_playevent'
      to: 'change'
    - platform: state
      entity_id: 'sensor.raspotify_playevent'
      to: 'playing'
  condition:
  - condition: state
    state: 'off'
    entity_id: 'switch.onkyo'
  action:
  - service: switch.turn_on
    entity_id: switch.onkyo

#- id: onkyo_stop_playing_delay_timer
#  alias: Start timer voor dat Onkyo definitief uit gaat
#  trigger:
#    platform: state
#    entity_id: media_player.chromebitch
#    to: 'off'
#  action:
#    service: timer.start
#    entity_id: timer.onkyo

#- id: onkyo_stop_playing
#  alias: Zet onkyo uit als Chromebitch uit gaat
#  trigger:
#    platform: event
#    event_type: timer.finished
#    event_data:
#      entity_id: timer.onkyo
#  condition:
#  - condition: state
#    state: 'off'
#    entity_id: media_player.chromebitch
#  action:
#  - service: switch.turn_off
#    entity_id: switch.onkyo

- id: onkyo_stop_playing
  alias: Zet onkyo uit als Chromebitch uit gaat
  trigger:
    platform: state
    entity_id: media_player.chromebitch
    to: 'off'
  action:
  - delay: 00:00:17
  - condition: state
    state: 'off'
    entity_id: input_boolean.onkyo_lock
  - condition: state
    state: 'off'
    entity_id: media_player.chromebitch
  - condition: template
    value_template: "{{ states('sensor.raspotify_playevent') != 'playing' }}"
  - condition: template
    value_template: "{{ states('media_player.vlc_telnet') != 'playing' }}"
  - service: switch.turn_off
    entity_id: switch.onkyo

# - id: onkyo_stop_playing_optic
#   alias: Zet onkyo uit als Spotify op pi uit gaat
#   trigger:
#     platform: state
#     entity_id: media_player.spotify_jochem_van_leeuwen
#     to: 'idle'
#   condition:
#     condition: and
#     conditions:
#     - condition: state
#       state: 'on'
#       entity_id: switch.onkyo
#     - condition: state
#       state: 'off'
#       entity_id: input_boolean.onkyo_lock
#   action:
#   - delay: 00:00:17
#   - condition: state
#     state: 'off'
#     entity_id: media_player.chromebitch
#   - service: switch.turn_off
#     entity_id: switch.onkyo

# - id: onkyo_stop_playing_optic2
#   alias: Zet onkyo uit als Spotify op pi uit gaat (trigger = andere source)
#   trigger:
#     platform: template
#     value_template: "{% if not is_state_attr('media_player.spotify_jochem_van_leeuwen', 'source', 'pi') %}true{% endif %}"
#   condition:
#     condition: and
#     conditions:
#     - condition: state
#       state: 'on'
#       entity_id: switch.onkyo
#     - condition: state
#       state: 'off'
#       entity_id: input_boolean.onkyo_lock
#   action:
#   - delay: 00:00:17
#   - condition: state
#     state: 'off'
#     entity_id: media_player.chromebitch
#   - condition: template
#     value_template: "{% if not is_state_attr('media_player.spotify_jochem_van_leeuwen', 'source', 'pi') %}true{% endif %}"
#   - service: switch.turn_off
#     entity_id: switch.onkyo

- id: onkyo_stop_playing_raspotify
  alias: Zet onkyo uit als Spotify op pi uit gaat
  trigger:
  - platform: state
    entity_id: 'sensor.raspotify_playevent'
    to: 'stop'
  - platform: state
    entity_id: 'sensor.raspotify_playevent'
    to: 'paused'
  condition:
    condition: and
    conditions:
    - condition: state
      state: 'on'
      entity_id: switch.onkyo
    - condition: state
      state: 'off'
      entity_id: input_boolean.onkyo_lock
  action:
  # wait long enough for the source in the spotify API to change to another device (e.g. phone)
  # delay is also needed to allow the user to switch to another device on the onkyo (i.e. chromebitch)
  - delay: 00:00:30
  - condition: state
    state: 'off'
    entity_id: media_player.chromebitch
  - condition: template
    value_template: "{{ states('sensor.raspotify_playevent') != 'playing' }}"
  - condition: template
    value_template: "{{ states('media_player.vlc_telnet') != 'playing' }}"
  - service: switch.turn_off
    entity_id: switch.onkyo

- id: onkyo_stop_playing_vlc
  alias: Zet onkyo uit als VLC uit gaat
  trigger:
    platform: state
    entity_id: media_player.vlc_telnet
    from: 'playing'
  action:
  - delay: 00:00:17
  - condition: state
    state: 'off'
    entity_id: input_boolean.onkyo_lock
  - condition: state
    state: 'off'
    entity_id: media_player.chromebitch
  - condition: template
    value_template: "{{ states('sensor.raspotify_playevent') != 'start' }}"
  - condition: template
    value_template: "{{ states('media_player.vlc_telnet') != 'playing' }}"
  - service: switch.turn_off
    entity_id: switch.onkyo

- id: spotify_stop_als_onkyo_uit
  alias: Zet Spotify uit als onkyo uit gaat
  trigger:
    platform: state
    entity_id: switch.onkyo
    to: 'off'
  action:
    service: script.spotify_op_pi_uit

- id: chromecast_stop_als_onkyo_uit
  alias: Zet Chromecast uit als onkyo uit gaat
  trigger:
    platform: state
    entity_id: switch.onkyo
    to: 'off'
  action:
    service: media_player.media_pause
    entity_id: media_player.chromebitch

- id: vlc_stop_als_onkyo_uit
  alias: Zet VLC uit als onkyo uit gaat
  trigger:
    platform: state
    entity_id: switch.onkyo
    to: 'off'
  action:
    service: media_player.media_stop
    entity_id: media_player.vlc_telnet

- id: radiator_woonkamer_on
  alias: Switch Radiator in Woonkamer on
  trigger:
    platform: state
    entity_id: input_boolean.radiator_woonkamer
    to: 'on'
  action:
  - service: script.radiator_woonkamer_on

- id: radiator_woonkamer_off
  alias: Switch Radiator in Woonkamer off
  trigger:
    platform: state
    entity_id: input_boolean.radiator_woonkamer
    to: 'off'
  action:
  - service: script.turn_on
    entity_id: script.radiator_woonkamer_off

- id: radiator_woonkamer_max_on
  alias: Switch Radiator in Woonkamer Max on
  trigger:
    platform: state
    entity_id: input_boolean.radiator_woonkamer_max
    to: 'on'
  action:
  - service: script.turn_on
    entity_id: script.radiator_woonkamer_max_on

- id: spotifylaptop2chromebitch
  alias: Speel muziek van laptop op Chromcast
  trigger:
    platform: state
    entity_id: media_player.spotify_jochem_van_leeuwen
    to: playing
#  condition:
#  - condition: state
#    entity_id: person.jochem
#    state: home
#  - condition: template
#    value_template: "{{ is_state_attr('media_player.spotify_jochem_van_leeuwen', 'source', 'HI-LAPTOP-JLN1') }}"
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: person.jochem
      state: home
    - condition: or
      conditions:
      - condition: template
        value_template: "{{ is_state_attr('media_player.spotify_jochem_van_leeuwen', 'source', 'HI-LAPTOP-JLN1') }}"
      - condition: template
        value_template: "{{ is_state_attr('media_player.spotify_jochem_van_leeuwen', 'source', 'DESKTOP-56IBQA7') }}"
  action:
  - service: script.turn_on
    entity_id: script.spotify2chromecast

- id: to_tasker_radiatoruit
  alias: Stuur bericht radiatoruit naar tasker
  trigger:
    platform: time
    at: '21:45:00'
  condition:
  - condition: state
    entity_id: input_boolean.radiator_woonkamer
    state: 'on'
  action:
  - service: script.to_tasker_radiatoruit

- id: radiator_aan_als_thuis
  alias: Zet radiator aan als ik om 9:05 nog thuis ben
  trigger:
    platform: time
    at: '09:05:00'
  condition:
  - condition: state
    entity_id: input_boolean.radiator_woonkamer
    state: 'off'
  - condition: state
    entity_id: person.jochem
    state: home
  action:
  - service: script.radiator_woonkamer_on

- id: lichten_aan_als_deur_open
  alias: Zet de lichten aan als de deur open gaat
  trigger:
    platform: state
    entity_id: binary_sensor.voordeur
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: person.jochem
    state: not_home
  - condition: state
    state: above_horizon
    entity_id: sun.sun
  action:
  - service: timer.start
    data:
      entity_id: timer.voordeur
  - service: script.scene_overdag

- id: lichten_aan_als_deur_open_avond
  alias: Zet de lichten aan als de deur open gaat (avond)
  trigger:
    platform: state
    entity_id: binary_sensor.voordeur
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: person.jochem
    state: not_home
  - condition: state
    state: below_horizon
    entity_id: sun.sun
  action:
  - service: timer.start
    data:
      entity_id: timer.voordeur
  - service: script.scene_avond

- id: deurnotificatie
  alias: Stuur notificatie als er niet op tijd iemand thuis komt
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.voordeur
  condition:
  - condition: state
    entity_id: person.jochem
    state: not_home
  action:
  - service: shell_command.get_url
    data:
      url: !secret to_tasker_deurnotificatie

- id: onkyo_on_at_lock
  alias: Switch Onkyo on when lock is turned on
  trigger:
    platform: state
    entity_id: input_boolean.onkyo_lock
    to: 'on'
  condition:
  - condition: state
    state: 'off'
    entity_id: switch.onkyo
  action:
  - service: switch.turn_on
    entity_id: switch.onkyo

- id: onkyo_off_at_unlock
  alias: Switch Onkyo on when lock is turned off
  trigger:
    platform: state
    entity_id: input_boolean.onkyo_lock
    to: 'off'
  condition:
  - condition: state
    state: 'on'
    entity_id: switch.onkyo
  action:
  - service: switch.turn_off
    entity_id: switch.onkyo

- id: onyo_on_set_lock
  alias: Switch lock on when button is pressed
  trigger:
    platform: state
    entity_id: sensor.onkyo_onoff_switch_action
    to: 'on'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.onkyo_lock

- id: onkyo_off_set_lock
  alias: Switch lock off and turn onkyo off when button is pressed
  trigger:
    platform: state
    entity_id: sensor.onkyo_onoff_switch_action
    to: 'off'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.onkyo_lock
  - service: switch.turn_off
    entity_id: switch.onkyo

- id: start_spotify_paused_timer
  alias: Start timer when spotify is paused
  trigger:
    platform: state
    entity_id: media_player.spotify_jochem_van_leeuwen
    to: 'paused'
  action:
    service: timer.start
    entity_id: timer.spotify_pause_timer

- id: start_spotify_paused_timer2
  alias: Start timer when spotify goes from playing to idle
  trigger:
    platform: state
    entity_id: media_player.spotify_jochem_van_leeuwen
    from: 'paused'
    to: 'idle'
  action:
    service: timer.start
    entity_id: timer.spotify_pause_timer

- id: round_remote_toggle
  alias: Round remote toggle light or switch
  mode: parallel
  trigger:
    platform: state
    entity_id: sensor.ronde_remote_action
    to: toggle
  action:
    - service_template: "{{ (states.input_text.current_active_light.state).split('.')[0] }}.toggle"
      data_template:
        entity_id: "{{ states.input_text.current_active_light.state }}"

- id: round_remote_left
  alias: Round remote select light in reverse
  mode: parallel
  trigger:
    platform: state
    entity_id: sensor.ronde_remote_action
    to: arrow_left_click
  action:
  - service: python_script.next_item
    data:
      groupname: 'group.lights_for_remote'
      counter: 'input_number.cntr_lights'
      direction: 'reverse'

- id: round_remote_right
  alias: Round remote select light forwards
  mode: parallel
  trigger:
    platform: state
    entity_id: sensor.ronde_remote_action
    to: arrow_right_click
  action:
  - service: python_script.next_item
    data:
      groupname: 'group.lights_for_remote'
      counter: 'input_number.cntr_lights'
      direction: 'forward'

- id: round_remote_up
  alias: Round remote select scene in reverse
  mode: parallel
  trigger:
    platform: state
    entity_id: sensor.ronde_remote_action
    to: brightness_up_click
  action:
  - service: python_script.next_item
    data:
      groupname: 'group.scenes_for_remote'
      counter: 'input_number.cntr_scenes'
      direction: 'reverse'

- id: round_remote_down
  alias: Round remote select scene forwards
  mode: parallel
  trigger:
    platform: state
    entity_id: sensor.ronde_remote_action
    to: brightness_down_click
  action:
  - service: python_script.next_item
    data:
      groupname: 'group.scenes_for_remote'
      counter: 'input_number.cntr_scenes'
      direction: 'forward'

- id: round_remote_up_hold
  alias: Round remote start brightening
  trigger:
    - platform: state
      entity_id: sensor.ronde_remote_action
      to: brightness_up_hold
  condition:
  - condition: template
    value_template: "{{ is_state(states.input_text.current_active_light.state, 'on') }}"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.remote_hold
    - service: python_script.change_attribute_light_smoothly
      data_template:
        entity_id: "{{ states.input_text.current_active_light.state }}"
        input_boolean: 'input_boolean.remote_hold'
        delta: 5
        delay: 75

- id: round_remote_down_hold
  alias: Round remote start dimming
  trigger:
    - platform: state
      entity_id: sensor.ronde_remote_action
      to: brightness_down_hold
  condition:
  - condition: template
    value_template: "{{ is_state(states.input_text.current_active_light.state, 'on') }}"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.remote_hold
    - service: python_script.change_attribute_light_smoothly
      data_template:
        entity_id: "{{ states.input_text.current_active_light.state }}"
        input_boolean: 'input_boolean.remote_hold'
        delta: -5
        delay: 75

- id: round_remote_up_down_release
  alias: Round remote stop brightening or dimming
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: sensor.ronde_remote_action
      to: brightness_up_release
    - platform: state
      entity_id: sensor.ronde_remote_action
      to: brightness_down_release
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.remote_hold
        state: "on"
      - condition: template
        value_template: "{{ is_state(states.input_text.current_active_light.state, 'on') }}"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.remote_hold
